// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using ecommerce.Models;

namespace ecommerce.Data {
    public partial class ecommerceContext : DbContext {
        public ecommerceContext() {
        }

        public ecommerceContext(DbContextOptions<ecommerceContext> options)
            : base(options) {
        }

        public virtual DbSet<category> category { get; set; }
        public virtual DbSet<paymentDetails> paymentDetails { get; set; }
        public virtual DbSet<productReview> productReview { get; set; }
        public virtual DbSet<products> products { get; set; }
        public virtual DbSet<stock> stock { get; set; }
        public virtual DbSet<users> users { get; set; }
        protected override void OnModelCreating(ModelBuilder modelBuilder) {
            modelBuilder.Entity<category>(entity => {
                entity.Property(e => e.activeId)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.creationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.name).HasColumnType("text");

                entity.HasOne(d => d.product)
                    .WithMany(p => p.category)
                    .HasForeignKey(d => d.productId)
                    .HasConstraintName("FK__category__produc__4BAC3F29");
            });

            modelBuilder.Entity<paymentDetails>(entity => {
                entity.Property(e => e.activeId)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.cardNumber)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.creationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.user)
                    .WithMany(p => p.paymentDetails)
                    .HasForeignKey(d => d.userId)
                    .HasConstraintName("FK__paymentDe__userI__5070F446");
            });

            modelBuilder.Entity<productReview>(entity => {
                entity.Property(e => e.activeId)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.creationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.description).HasColumnType("text");

                entity.HasOne(d => d.product)
                    .WithMany(p => p.productReview)
                    .HasForeignKey(d => d.productId)
                    .HasConstraintName("FK__productRe__produ__45F365D3");

                entity.HasOne(d => d.user)
                    .WithMany(p => p.productReview)
                    .HasForeignKey(d => d.userId)
                    .HasConstraintName("FK__productRe__userI__46E78A0C");
            });

            modelBuilder.Entity<products>(entity => {
                entity.HasKey(e => e.productId)
                    .HasName("PK__products__2D10D16A216107AF");

                entity.Property(e => e.activeId)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.creationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.description).HasColumnType("text");

                entity.Property(e => e.image)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<stock>(entity => {
                entity.Property(e => e.activeId)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.creationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.restockDate).HasColumnType("datetime");

                entity.HasOne(d => d.product)
                    .WithMany(p => p.stock)
                    .HasForeignKey(d => d.productId)
                    .HasConstraintName("FK__stock__productId__412EB0B6");
            });

            modelBuilder.Entity<users>(entity => {
                entity.HasKey(e => e.userId)
                    .HasName("PK__users__CB9A1CFF3DE986DD");

                entity.Property(e => e.activeId)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.creationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.emailAddress)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.firstName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.lastName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.password)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}